name: Lib Tests
on:
  push:
    branches:
      -  main
    paths:
      - .github/workflows/lib-test.yml
      - flake.nix
      - lib/default.nix
      # For `getNpm(Cpu|OS)For(System|Platform)'
      - lib/pkginfo.nix
      - lib/ideal-tree-plockv2.nix
      - lib/tests/ideal-tree-plockv2/default.nix
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - .github/workflows/lib-test.yml
      - flake.nix
      - lib/default.nix
      - lib/pkginfo.nix
      - lib/ideal-tree-plockv2.nix
      - lib/tests/ideal-tree-plockv2/default.nix
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  lib-tests:
    runs-on: ubuntu-latest
    env:
      SYSTEM: x86_64-linux
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - uses: cachix/install-nix-action@d64e0553100205688c0fb2fa16edb0fc8663c590
        with:
          nix_path: nixpkgs=channel:nixpkgs-22.05
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            substituters = https://cache.nixos.org
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            max-jobs = auto
            cores = 0
            substitute = true
            builders-use-substitutes = true
            fallback = true
            connect-timeout = 5
            stalled-download-timeout = 90
            timeout = 0
      - name: Setup
        run: |
          echo "# ============================================================================ #" >&2;
          { printf '    bash   version: '; bash   --version|head -n1; } >&2;
          { printf '    nix    version: '; nix    --version; } >&2;
          echo "# ---------------------------------------------------------------------------- #" >&2;
          # Register aliases to avoid the long ref
          nix registry add head    "github:aameen-tulip/at-node-nix/$GITHUB_REF";
          nix registry add nixpkgs "github:NixOS/nixpkgs/29769d2a1390d294469bcc6518f17931953545e1";
          # TODO: there's definitely a better way to pin this.
          nix registry add ak-nix  "github:aakropotkin/ak-nix/$(
            nix run nixpkgs#jq -- -r '.nodes["ak-nix"].locked.rev' ./flake.lock;
          )";

      - name: Ideal Tree PlockV2
        run: |
          nix eval --raw -f ./. runSimple                                            \
            --arg flocoConfig "{ system = \"$SYSTEM\"; enableImpureMeta = false; }"  \
            --arg ak-nix "builtins.getFlake \"ak-nix\""                              \
            --apply "runSimple: let
            report = k: v: let
              pf = if v then \"PASS\" else \"FAIL\";
            in builtins.trace \"\${pf}: \${k}\" v;
            rsl = builtins.all ( k: report k runSimple.\${k} )
                               ( builtins.attrNames runSimple );
          in assert rsl; \"PASS: ideal-tree-plockv2\"";
          exit "$?"
        working-directory: lib/tests/ideal-tree-plockv2
